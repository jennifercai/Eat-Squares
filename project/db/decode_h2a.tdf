--lpm_decode CBX_DECLARE_ALL_CONNECTED_PORTS="OFF" DEVICE_FAMILY="Cyclone V" LPM_DECODES=11 LPM_WIDTH=4 data eq
--VERSION_BEGIN 16.0 cbx_cycloneii 2016:04:27:18:05:34:SJ cbx_lpm_add_sub 2016:04:27:18:05:34:SJ cbx_lpm_compare 2016:04:27:18:05:34:SJ cbx_lpm_decode 2016:04:27:18:05:34:SJ cbx_mgl 2016:04:27:18:06:48:SJ cbx_nadder 2016:04:27:18:05:34:SJ cbx_stratix 2016:04:27:18:05:34:SJ cbx_stratixii 2016:04:27:18:05:34:SJ  VERSION_END


-- Copyright (C) 1991-2016 Altera Corporation. All rights reserved.
--  Your use of Altera Corporation's design tools, logic functions 
--  and other software and tools, and its AMPP partner logic 
--  functions, and any output files from any of the foregoing 
--  (including device programming or simulation files), and any 
--  associated documentation or information are expressly subject 
--  to the terms and conditions of the Altera Program License 
--  Subscription Agreement, the Altera Quartus Prime License Agreement,
--  the Altera MegaCore Function License Agreement, or other 
--  applicable license agreement, including, without limitation, 
--  that your use is for the sole purpose of programming logic 
--  devices manufactured by Altera and sold by Altera or its 
--  authorized distributors.  Please refer to the applicable 
--  agreement for further details.



--synthesis_resources = lut 16 
SUBDESIGN decode_h2a
( 
	data[3..0]	:	input;
	eq[10..0]	:	output;
) 
VARIABLE 
	data_wire[2..0]	: WIRE;
	enable_wire1	: WIRE;
	enable_wire2	: WIRE;
	eq_node[10..0]	: WIRE;
	eq_wire1w[7..0]	: WIRE;
	eq_wire2w[7..0]	: WIRE;
	w_anode1005w[3..0]	: WIRE;
	w_anode847w[3..0]	: WIRE;
	w_anode864w[3..0]	: WIRE;
	w_anode874w[3..0]	: WIRE;
	w_anode884w[3..0]	: WIRE;
	w_anode894w[3..0]	: WIRE;
	w_anode904w[3..0]	: WIRE;
	w_anode914w[3..0]	: WIRE;
	w_anode924w[3..0]	: WIRE;
	w_anode934w[3..0]	: WIRE;
	w_anode945w[3..0]	: WIRE;
	w_anode955w[3..0]	: WIRE;
	w_anode965w[3..0]	: WIRE;
	w_anode975w[3..0]	: WIRE;
	w_anode985w[3..0]	: WIRE;
	w_anode995w[3..0]	: WIRE;

BEGIN 
	data_wire[2..0] = data[2..0];
	enable_wire1 = (! data[3..3]);
	enable_wire2 = data[3..3];
	eq[] = eq_node[];
	eq_node[] = ( eq_wire2w[2..0], eq_wire1w[]);
	eq_wire1w[] = ( w_anode924w[3..3], w_anode914w[3..3], w_anode904w[3..3], w_anode894w[3..3], w_anode884w[3..3], w_anode874w[3..3], w_anode864w[3..3], w_anode847w[3..3]);
	eq_wire2w[] = ( w_anode1005w[3..3], w_anode995w[3..3], w_anode985w[3..3], w_anode975w[3..3], w_anode965w[3..3], w_anode955w[3..3], w_anode945w[3..3], w_anode934w[3..3]);
	w_anode1005w[] = ( (w_anode1005w[2..2] & data_wire[2..2]), (w_anode1005w[1..1] & data_wire[1..1]), (w_anode1005w[0..0] & data_wire[0..0]), enable_wire2);
	w_anode847w[] = ( (w_anode847w[2..2] & (! data_wire[2..2])), (w_anode847w[1..1] & (! data_wire[1..1])), (w_anode847w[0..0] & (! data_wire[0..0])), enable_wire1);
	w_anode864w[] = ( (w_anode864w[2..2] & (! data_wire[2..2])), (w_anode864w[1..1] & (! data_wire[1..1])), (w_anode864w[0..0] & data_wire[0..0]), enable_wire1);
	w_anode874w[] = ( (w_anode874w[2..2] & (! data_wire[2..2])), (w_anode874w[1..1] & data_wire[1..1]), (w_anode874w[0..0] & (! data_wire[0..0])), enable_wire1);
	w_anode884w[] = ( (w_anode884w[2..2] & (! data_wire[2..2])), (w_anode884w[1..1] & data_wire[1..1]), (w_anode884w[0..0] & data_wire[0..0]), enable_wire1);
	w_anode894w[] = ( (w_anode894w[2..2] & data_wire[2..2]), (w_anode894w[1..1] & (! data_wire[1..1])), (w_anode894w[0..0] & (! data_wire[0..0])), enable_wire1);
	w_anode904w[] = ( (w_anode904w[2..2] & data_wire[2..2]), (w_anode904w[1..1] & (! data_wire[1..1])), (w_anode904w[0..0] & data_wire[0..0]), enable_wire1);
	w_anode914w[] = ( (w_anode914w[2..2] & data_wire[2..2]), (w_anode914w[1..1] & data_wire[1..1]), (w_anode914w[0..0] & (! data_wire[0..0])), enable_wire1);
	w_anode924w[] = ( (w_anode924w[2..2] & data_wire[2..2]), (w_anode924w[1..1] & data_wire[1..1]), (w_anode924w[0..0] & data_wire[0..0]), enable_wire1);
	w_anode934w[] = ( (w_anode934w[2..2] & (! data_wire[2..2])), (w_anode934w[1..1] & (! data_wire[1..1])), (w_anode934w[0..0] & (! data_wire[0..0])), enable_wire2);
	w_anode945w[] = ( (w_anode945w[2..2] & (! data_wire[2..2])), (w_anode945w[1..1] & (! data_wire[1..1])), (w_anode945w[0..0] & data_wire[0..0]), enable_wire2);
	w_anode955w[] = ( (w_anode955w[2..2] & (! data_wire[2..2])), (w_anode955w[1..1] & data_wire[1..1]), (w_anode955w[0..0] & (! data_wire[0..0])), enable_wire2);
	w_anode965w[] = ( (w_anode965w[2..2] & (! data_wire[2..2])), (w_anode965w[1..1] & data_wire[1..1]), (w_anode965w[0..0] & data_wire[0..0]), enable_wire2);
	w_anode975w[] = ( (w_anode975w[2..2] & data_wire[2..2]), (w_anode975w[1..1] & (! data_wire[1..1])), (w_anode975w[0..0] & (! data_wire[0..0])), enable_wire2);
	w_anode985w[] = ( (w_anode985w[2..2] & data_wire[2..2]), (w_anode985w[1..1] & (! data_wire[1..1])), (w_anode985w[0..0] & data_wire[0..0]), enable_wire2);
	w_anode995w[] = ( (w_anode995w[2..2] & data_wire[2..2]), (w_anode995w[1..1] & data_wire[1..1]), (w_anode995w[0..0] & (! data_wire[0..0])), enable_wire2);
END;
--VALID FILE
